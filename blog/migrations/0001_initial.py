# Generated by Django 3.2.2 on 2021-05-07 05:47

import cloudinary.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default=None, max_length=255, verbose_name='Category Name')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('creator', models.CharField(default=None, max_length=255, verbose_name='Creator')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(default=None, max_length=255, verbose_name='Tag Name')),
                ('date_created', models.DateTimeField(auto_now=True)),
                ('creator', models.CharField(default=None, max_length=255, verbose_name='Creator')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(default=None, max_length=255)),
                ('content', models.TextField(default=None)),
                ('author', models.CharField(blank=True, default='Anonymus', max_length=255)),
                ('slug', models.SlugField(default=models.CharField(default=None, max_length=255), max_length=255, unique=True)),
                ('feature_image', cloudinary.models.CloudinaryField(blank=True, max_length=255, null=True)),
                ('category', models.ManyToManyField(to='blog.Category')),
                ('tag', models.ManyToManyField(to='blog.Tag')),
            ],
        ),
    ]
